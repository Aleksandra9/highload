version: '2.1'

services:
  nginx:
    image: nginx:1.21
    container_name: nginx-lb
    restart: on-failure
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      [ network-dialogue-1, network-dialogue-2, network-dialogue-3 ]
    ports:
      - "80:80"
      - "8080:8080"

  haproxy:
    image: haproxy:2.4
    container_name: haproxy-lb
    restart: "no"
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    depends_on:
      [ db-1, db-2, db-3 ]
    ports:
      - "5432:5432"
      - "8404:8404"

  db-1:
    image: 'postgres:16-alpine'
    container_name: db-1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-dump.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      interval: 20s
      timeout: 3s
      retries: 3

  db-2:
    image: 'postgres:16-alpine'
    container_name: db-2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-dump.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      interval: 20s
      timeout: 3s
      retries: 3

  db-3:
    image: 'postgres:16-alpine'
    container_name: db-3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres-dump.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      interval: 20s
      timeout: 3s
      retries: 3

  network-dialogue-1:
    image: 'network-dialogue:latest'
    build:
      context: ./dialogue
    container_name: "network_dialogue_1"
    depends_on:
      [ haproxy ]
    environment:
      - POSTGRES_URL=jdbc:postgresql://haproxy:5432/postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres

  network-dialogue-2:
    image: 'network-dialogue:latest'
    build:
      context: ./dialogue
    container_name: "network_dialogue_2"
    depends_on:
      [ haproxy ]
    environment:
      - POSTGRES_URL=jdbc:postgresql://haproxy:5432/postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres


  network-dialogue-3:
    image: 'network-dialogue:latest'
    build:
      context: ./dialogue
    container_name: "network_dialogue_3"
    depends_on:
      [ haproxy ]
    environment:
      - POSTGRES_URL=jdbc:postgresql://haproxy:5432/postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
volumes:
  healthcheck-volume: